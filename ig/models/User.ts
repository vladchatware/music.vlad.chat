/* tslint:disable */
/* eslint-disable */
/**
 * instagrapi-rest
 * RESTful API Service for instagrapi
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    pk: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    fullName: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isPrivate: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    profilePicUrl: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    profilePicUrlHd?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isVerified: boolean;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    mediaCount: number;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    followerCount: number;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    followingCount: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    biography?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    externalUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    accountType?: number;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isBusiness: boolean;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    publicEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    contactPhoneNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    publicPhoneCountryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    publicPhoneNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    businessContactMethod?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    businessCategoryName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    categoryName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    category?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    addressStreet?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    cityId?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    cityName?: string;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    longitude?: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    zip?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    instagramLocationId?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    interopMessagingUserFbid?: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('pk' in value) || value['pk'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('isPrivate' in value) || value['isPrivate'] === undefined) return false;
    if (!('profilePicUrl' in value) || value['profilePicUrl'] === undefined) return false;
    if (!('isVerified' in value) || value['isVerified'] === undefined) return false;
    if (!('mediaCount' in value) || value['mediaCount'] === undefined) return false;
    if (!('followerCount' in value) || value['followerCount'] === undefined) return false;
    if (!('followingCount' in value) || value['followingCount'] === undefined) return false;
    if (!('isBusiness' in value) || value['isBusiness'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'pk': json['pk'],
        'username': json['username'],
        'fullName': json['full_name'],
        'isPrivate': json['is_private'],
        'profilePicUrl': json['profile_pic_url'],
        'profilePicUrlHd': json['profile_pic_url_hd'] == null ? undefined : json['profile_pic_url_hd'],
        'isVerified': json['is_verified'],
        'mediaCount': json['media_count'],
        'followerCount': json['follower_count'],
        'followingCount': json['following_count'],
        'biography': json['biography'] == null ? undefined : json['biography'],
        'externalUrl': json['external_url'] == null ? undefined : json['external_url'],
        'accountType': json['account_type'] == null ? undefined : json['account_type'],
        'isBusiness': json['is_business'],
        'publicEmail': json['public_email'] == null ? undefined : json['public_email'],
        'contactPhoneNumber': json['contact_phone_number'] == null ? undefined : json['contact_phone_number'],
        'publicPhoneCountryCode': json['public_phone_country_code'] == null ? undefined : json['public_phone_country_code'],
        'publicPhoneNumber': json['public_phone_number'] == null ? undefined : json['public_phone_number'],
        'businessContactMethod': json['business_contact_method'] == null ? undefined : json['business_contact_method'],
        'businessCategoryName': json['business_category_name'] == null ? undefined : json['business_category_name'],
        'categoryName': json['category_name'] == null ? undefined : json['category_name'],
        'category': json['category'] == null ? undefined : json['category'],
        'addressStreet': json['address_street'] == null ? undefined : json['address_street'],
        'cityId': json['city_id'] == null ? undefined : json['city_id'],
        'cityName': json['city_name'] == null ? undefined : json['city_name'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'zip': json['zip'] == null ? undefined : json['zip'],
        'instagramLocationId': json['instagram_location_id'] == null ? undefined : json['instagram_location_id'],
        'interopMessagingUserFbid': json['interop_messaging_user_fbid'] == null ? undefined : json['interop_messaging_user_fbid'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pk': value['pk'],
        'username': value['username'],
        'full_name': value['fullName'],
        'is_private': value['isPrivate'],
        'profile_pic_url': value['profilePicUrl'],
        'profile_pic_url_hd': value['profilePicUrlHd'],
        'is_verified': value['isVerified'],
        'media_count': value['mediaCount'],
        'follower_count': value['followerCount'],
        'following_count': value['followingCount'],
        'biography': value['biography'],
        'external_url': value['externalUrl'],
        'account_type': value['accountType'],
        'is_business': value['isBusiness'],
        'public_email': value['publicEmail'],
        'contact_phone_number': value['contactPhoneNumber'],
        'public_phone_country_code': value['publicPhoneCountryCode'],
        'public_phone_number': value['publicPhoneNumber'],
        'business_contact_method': value['businessContactMethod'],
        'business_category_name': value['businessCategoryName'],
        'category_name': value['categoryName'],
        'category': value['category'],
        'address_street': value['addressStreet'],
        'city_id': value['cityId'],
        'city_name': value['cityName'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'zip': value['zip'],
        'instagram_location_id': value['instagramLocationId'],
        'interop_messaging_user_fbid': value['interopMessagingUserFbid'],
    };
}

