/* tslint:disable */
/* eslint-disable */
/**
 * instagrapi-rest
 * RESTful API Service for instagrapi
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StoryLocation } from './StoryLocation';
import {
    StoryLocationFromJSON,
    StoryLocationFromJSONTyped,
    StoryLocationToJSON,
    StoryLocationToJSONTyped,
} from './StoryLocation';
import type { UserShort } from './UserShort';
import {
    UserShortFromJSON,
    UserShortFromJSONTyped,
    UserShortToJSON,
    UserShortToJSONTyped,
} from './UserShort';
import type { StoryHashtag } from './StoryHashtag';
import {
    StoryHashtagFromJSON,
    StoryHashtagFromJSONTyped,
    StoryHashtagToJSON,
    StoryHashtagToJSONTyped,
} from './StoryHashtag';
import type { StoryMention } from './StoryMention';
import {
    StoryMentionFromJSON,
    StoryMentionFromJSONTyped,
    StoryMentionToJSON,
    StoryMentionToJSONTyped,
} from './StoryMention';
import type { StoryLink } from './StoryLink';
import {
    StoryLinkFromJSON,
    StoryLinkFromJSONTyped,
    StoryLinkToJSON,
    StoryLinkToJSONTyped,
} from './StoryLink';
import type { StoryMedia } from './StoryMedia';
import {
    StoryMediaFromJSON,
    StoryMediaFromJSONTyped,
    StoryMediaToJSON,
    StoryMediaToJSONTyped,
} from './StoryMedia';
import type { StorySticker } from './StorySticker';
import {
    StoryStickerFromJSON,
    StoryStickerFromJSONTyped,
    StoryStickerToJSON,
    StoryStickerToJSONTyped,
} from './StorySticker';

/**
 * 
 * @export
 * @interface Story
 */
export interface Story {
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    pk: string;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    code: string;
    /**
     * 
     * @type {Date}
     * @memberof Story
     */
    takenAt: Date;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    mediaType: number;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    productType?: string;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    thumbnailUrl?: string;
    /**
     * 
     * @type {UserShort}
     * @memberof Story
     */
    user: UserShort;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    videoUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    videoDuration?: number;
    /**
     * 
     * @type {Array<UserShort>}
     * @memberof Story
     */
    sponsorTags: Array<UserShort>;
    /**
     * 
     * @type {Array<StoryMention>}
     * @memberof Story
     */
    mentions: Array<StoryMention>;
    /**
     * 
     * @type {Array<StoryLink>}
     * @memberof Story
     */
    links: Array<StoryLink>;
    /**
     * 
     * @type {Array<StoryHashtag>}
     * @memberof Story
     */
    hashtags: Array<StoryHashtag>;
    /**
     * 
     * @type {Array<StoryLocation>}
     * @memberof Story
     */
    locations: Array<StoryLocation>;
    /**
     * 
     * @type {Array<StorySticker>}
     * @memberof Story
     */
    stickers: Array<StorySticker>;
    /**
     * 
     * @type {Array<StoryMedia>}
     * @memberof Story
     */
    medias?: Array<StoryMedia>;
}

/**
 * Check if a given object implements the Story interface.
 */
export function instanceOfStory(value: object): value is Story {
    if (!('pk' in value) || value['pk'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('takenAt' in value) || value['takenAt'] === undefined) return false;
    if (!('mediaType' in value) || value['mediaType'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('sponsorTags' in value) || value['sponsorTags'] === undefined) return false;
    if (!('mentions' in value) || value['mentions'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('hashtags' in value) || value['hashtags'] === undefined) return false;
    if (!('locations' in value) || value['locations'] === undefined) return false;
    if (!('stickers' in value) || value['stickers'] === undefined) return false;
    return true;
}

export function StoryFromJSON(json: any): Story {
    return StoryFromJSONTyped(json, false);
}

export function StoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Story {
    if (json == null) {
        return json;
    }
    return {
        
        'pk': json['pk'],
        'id': json['id'],
        'code': json['code'],
        'takenAt': (new Date(json['taken_at'])),
        'mediaType': json['media_type'],
        'productType': json['product_type'] == null ? undefined : json['product_type'],
        'thumbnailUrl': json['thumbnail_url'] == null ? undefined : json['thumbnail_url'],
        'user': UserShortFromJSON(json['user']),
        'videoUrl': json['video_url'] == null ? undefined : json['video_url'],
        'videoDuration': json['video_duration'] == null ? undefined : json['video_duration'],
        'sponsorTags': ((json['sponsor_tags'] as Array<any>).map(UserShortFromJSON)),
        'mentions': ((json['mentions'] as Array<any>).map(StoryMentionFromJSON)),
        'links': ((json['links'] as Array<any>).map(StoryLinkFromJSON)),
        'hashtags': ((json['hashtags'] as Array<any>).map(StoryHashtagFromJSON)),
        'locations': ((json['locations'] as Array<any>).map(StoryLocationFromJSON)),
        'stickers': ((json['stickers'] as Array<any>).map(StoryStickerFromJSON)),
        'medias': json['medias'] == null ? undefined : ((json['medias'] as Array<any>).map(StoryMediaFromJSON)),
    };
}

export function StoryToJSON(json: any): Story {
    return StoryToJSONTyped(json, false);
}

export function StoryToJSONTyped(value?: Story | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pk': value['pk'],
        'id': value['id'],
        'code': value['code'],
        'taken_at': ((value['takenAt']).toISOString()),
        'media_type': value['mediaType'],
        'product_type': value['productType'],
        'thumbnail_url': value['thumbnailUrl'],
        'user': UserShortToJSON(value['user']),
        'video_url': value['videoUrl'],
        'video_duration': value['videoDuration'],
        'sponsor_tags': ((value['sponsorTags'] as Array<any>).map(UserShortToJSON)),
        'mentions': ((value['mentions'] as Array<any>).map(StoryMentionToJSON)),
        'links': ((value['links'] as Array<any>).map(StoryLinkToJSON)),
        'hashtags': ((value['hashtags'] as Array<any>).map(StoryHashtagToJSON)),
        'locations': ((value['locations'] as Array<any>).map(StoryLocationToJSON)),
        'stickers': ((value['stickers'] as Array<any>).map(StoryStickerToJSON)),
        'medias': value['medias'] == null ? undefined : ((value['medias'] as Array<any>).map(StoryMediaToJSON)),
    };
}

